<!DOCTYPE html><html lang="zh-CN"><head><meta http-equiv="content-type" content="text/html; charset=utf-8"><meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0" name="viewport"><meta content="yes" name="apple-mobile-web-app-capable"><meta content="black-translucent" name="apple-mobile-web-app-status-bar-style"><meta content="telephone=no" name="format-detection"><meta name="description"><title>Java Web 项目中的HttpClient | 技术随笔</title><link rel="stylesheet" type="text/css" href="/css/style.css?v=0.0.0"><link rel="stylesheet" type="text/css" href="//cdn.bootcss.com/normalize/7.0.0/normalize.min.css"><link rel="stylesheet" type="text/css" href="//cdn.bootcss.com/pure/1.0.0/pure-min.css"><link rel="stylesheet" type="text/css" href="//cdn.bootcss.com/pure/1.0.0/grids-responsive-min.css"><link rel="stylesheet" href="//cdn.bootcss.com/font-awesome/4.7.0/css/font-awesome.min.css"><script type="text/javascript" src="//cdn.bootcss.com/jquery/3.2.1/jquery.min.js"></script><link rel="Shortcut Icon" type="image/x-icon" href="/favicon.ico"><link rel="apple-touch-icon" href="/apple-touch-icon.png"><link rel="apple-touch-icon-precomposed" href="/apple-touch-icon.png"></head><body><div class="body_container"><div id="header"><div class="site-name"><h1 class="hidden">Java Web 项目中的HttpClient</h1><a id="logo" href="/.">技术随笔</a><p class="description"></p></div><div id="nav-menu"><a class="current" href="/."><i class="fa fa-home"> 首页</i></a><a href="/archives/"><i class="fa fa-archive"> 归档</i></a><a href="/about/"><i class="fa fa-user"> 关于</i></a><a href="/atom.xml"><i class="fa fa-rss"> 订阅</i></a></div></div><div class="pure-g" id="layout"><div class="pure-u-1 pure-u-md-3-4"><div class="content_container"><div class="post"><h1 class="post-title">Java Web 项目中的HttpClient</h1><div class="post-meta">May 31, 2016<span> | </span><span class="category"><a href="/categories/code-snippet/">代码片段</a></span></div><div class="post-content"><h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>一个Java Web项目，要通过Http接口调用外部项目的服务。<br>要解决的问题：</p>
<ol>
<li>通过POST访问Http访问外部服务，支持HTTP和HTTPS</li>
<li>返回内容为JSON，转换成Java对象</li>
<li>使用资源池减少调用开销<h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><h2 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h2>使用HttpClient4 + Spring RestTemplate +</li>
</ol>
<p>参考：<br><a href="https://spring.io/blog/2009/03/27/rest-in-spring-3-resttemplate" target="_blank" rel="noopener">https://spring.io/blog/2009/03/27/rest-in-spring-3-resttemplate</a></p>
<p><a href="http://www.cnblogs.com/hupengcool/p/4590006.html" target="_blank" rel="noopener">http://www.cnblogs.com/hupengcool/p/4590006.html</a></p>
<p><a href="https://coderwall.com/p/dcohra/connection-pooling-with-spring-resttemplate" target="_blank" rel="noopener">https://coderwall.com/p/dcohra/connection-pooling-with-spring-resttemplate</a></p>
<p><a href="http://liuxing.info/2015/05/21/RestTemplate%E5%AE%9E%E8%B7%B5/" target="_blank" rel="noopener">http://liuxing.info/2015/05/21/RestTemplate%E5%AE%9E%E8%B7%B5/</a></p>
<p><a href="http://www.javased.com/?api=org.springframework.util.MultiValueMap" target="_blank" rel="noopener">http://www.javased.com/?api=org.springframework.util.MultiValueMap</a></p>
<h2 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h2><p>在Spring+Struts的Web项目中，Spring相关依赖已有，新增HttpClient4的pom依赖<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.httpcomponents<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>示例代码<br>网络上找的接受任何证书的HTTPS客户端<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.http.config.Registry;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.config.RegistryBuilder;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.conn.socket.ConnectionSocketFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.conn.socket.PlainConnectionSocketFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.conn.ssl.NoopHostnameVerifier;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.conn.ssl.SSLConnectionSocketFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.CloseableHttpClient;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.HttpClientBuilder;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.conn.PoolingHttpClientConnectionManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.ssl.SSLContextBuilder;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.ssl.TrustStrategy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.HostnameVerifier;</span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.SSLContext;</span><br><span class="line"><span class="keyword">import</span> java.security.KeyManagementException;</span><br><span class="line"><span class="keyword">import</span> java.security.KeyStoreException;</span><br><span class="line"><span class="keyword">import</span> java.security.NoSuchAlgorithmException;</span><br><span class="line"><span class="keyword">import</span> java.security.cert.CertificateException;</span><br><span class="line"><span class="keyword">import</span> java.security.cert.X509Certificate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpClientUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> CloseableHttpClient <span class="title">acceptsUntrustedCertsHttpClient</span><span class="params">()</span> <span class="keyword">throws</span> KeyStoreException, NoSuchAlgorithmException, KeyManagementException </span>&#123;</span><br><span class="line">        HttpClientBuilder b = HttpClientBuilder.create();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// setup a Trust Strategy that allows all certificates.</span></span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        SSLContext sslContext = <span class="keyword">new</span> SSLContextBuilder().loadTrustMaterial(<span class="keyword">null</span>, <span class="keyword">new</span> TrustStrategy() &#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isTrusted</span><span class="params">(X509Certificate[] arg0, String arg1)</span> <span class="keyword">throws</span> CertificateException </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).build();</span><br><span class="line">        b.setSSLContext(sslContext);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// don't check Hostnames, either.</span></span><br><span class="line">        <span class="comment">//      -- use SSLConnectionSocketFactory.getDefaultHostnameVerifier(), if you don't want to weaken</span></span><br><span class="line">        HostnameVerifier hostnameVerifier = NoopHostnameVerifier.INSTANCE;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// here's the special part:</span></span><br><span class="line">        <span class="comment">//      -- need to create an SSL Socket Factory, to use our weakened "trust strategy";</span></span><br><span class="line">        <span class="comment">//      -- and create a Registry, to register it.</span></span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        SSLConnectionSocketFactory sslSocketFactory = <span class="keyword">new</span> SSLConnectionSocketFactory(sslContext, hostnameVerifier);</span><br><span class="line">        Registry&lt;ConnectionSocketFactory&gt; socketFactoryRegistry = RegistryBuilder.&lt;ConnectionSocketFactory&gt;create()</span><br><span class="line">                .register(<span class="string">"http"</span>, PlainConnectionSocketFactory.getSocketFactory())</span><br><span class="line">                .register(<span class="string">"https"</span>, sslSocketFactory)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// now, we create connection-manager using our Registry.</span></span><br><span class="line">        <span class="comment">//      -- allows multi-threaded use</span></span><br><span class="line">        PoolingHttpClientConnectionManager connMgr = <span class="keyword">new</span> PoolingHttpClientConnectionManager( socketFactoryRegistry);</span><br><span class="line">        connMgr.setMaxTotal(<span class="number">200</span>);</span><br><span class="line">        connMgr.setDefaultMaxPerRoute(<span class="number">100</span>);</span><br><span class="line">        b.setConnectionManager( connMgr);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// finally, build the HttpClient;</span></span><br><span class="line">        <span class="comment">//      -- done!</span></span><br><span class="line">        CloseableHttpClient client = b.build();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> client;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        CloseableHttpClient httpClient = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            httpClient = HttpClientUtils.acceptsUntrustedCertsHttpClient();</span><br><span class="line">            HttpComponentsClientHttpRequestFactory clientHttpRequestFactory = <span class="keyword">new</span> HttpComponentsClientHttpRequestFactory(httpClient);</span><br><span class="line">            RestTemplate restTemplate = <span class="keyword">new</span> RestTemplate(clientHttpRequestFactory);</span><br><span class="line">          <span class="comment">//https://api.douban.com/v2/book/search?q=机器学习</span></span><br><span class="line">            String result = restTemplate.getForObject(<span class="string">"https://api.douban.com/v2/book/search?q=%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0"</span>,String.class);</span><br><span class="line">            System.out.println(result);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>响应<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">"count"</span>: <span class="number">20</span>,</span><br><span class="line"><span class="attr">"start"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"total"</span>: <span class="number">649</span>,</span><br><span class="line"><span class="attr">"books"</span>: [</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">"rating"</span>: &#123;</span><br><span class="line"><span class="attr">"max"</span>: <span class="number">10</span>,</span><br><span class="line"><span class="attr">"numRaters"</span>: <span class="number">649</span>,</span><br><span class="line"><span class="attr">"average"</span>: <span class="string">"8.4"</span>,</span><br><span class="line"><span class="attr">"min"</span>: <span class="number">0</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">"subtitle"</span>: <span class="string">""</span>,</span><br><span class="line"><span class="attr">"author"</span>: [</span><br><span class="line"><span class="string">"(美)Tom Mitchell"</span></span><br><span class="line">],</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<p>如果服务端只支持x-www-form-urlencoded格式的POST请求</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">String postBody = buildQueryString(request);</span><br><span class="line">RestTemplate restTemplate = CashierHttpClient.getRestTemplate();</span><br><span class="line">restTemplate.getMessageConverters().add(<span class="keyword">new</span> FormHttpMessageConverter());</span><br><span class="line"></span><br><span class="line">MultiValueMap&lt;String,String&gt; params = <span class="keyword">new</span> LinkedMultiValueMap&lt;String,String&gt;();</span><br><span class="line">params.set(<span class="string">"Accept"</span>, <span class="string">"application/json"</span>);</span><br><span class="line">params.set(<span class="string">"Content-Type"</span>, <span class="string">"application/x-www-form-urlencoded"</span>);</span><br><span class="line"></span><br><span class="line">HttpHeaders requestHeaders=<span class="keyword">new</span> HttpHeaders();</span><br><span class="line">requestHeaders.setContentType(MediaType.APPLICATION_FORM_URLENCODED);</span><br><span class="line">requestHeaders.set(<span class="string">"Accept"</span>, <span class="string">"application/json"</span>);</span><br><span class="line">HttpEntity&lt;String&gt; requestEntity=<span class="keyword">new</span> HttpEntity&lt;String&gt;(postBody, requestHeaders);</span><br><span class="line">String url = <span class="string">"http://10.4.233.174:8080/gateway"</span>;</span><br><span class="line"></span><br><span class="line">ResponseEntity&lt;PayQueryResponse&gt; responseEntity = restTemplate.exchange(url, HttpMethod.POST,requestEntity,PayQueryResponse.class);</span><br><span class="line">PayQueryResponse response = responseEntity.getBody();</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String, String&gt; <span class="title">getDataMap</span><span class="params">(Object request)</span> </span>&#123;</span><br><span class="line">        Map&lt;String, String&gt; beanMap = <span class="keyword">new</span> BeanMap(request);</span><br><span class="line">        Map&lt;String, String&gt; dataMap = <span class="keyword">new</span> HashMap&lt;String, String&gt;();</span><br><span class="line">        <span class="keyword">for</span> (String key : beanMap.keySet()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">"class"</span>.equals(key) || beanMap.get(key) == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            dataMap.put(key, beanMap.get(key));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dataMap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">buildQueryString</span><span class="params">(Object request)</span> </span>&#123;</span><br><span class="line">        Map&lt;String, String&gt; dataMap = getDataMap(request);</span><br><span class="line">        Map&lt;String, String&gt; signMapSorted = <span class="keyword">new</span> TreeMap&lt;String, String&gt;(dataMap);</span><br><span class="line">        StringBuilder builder = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">for</span> (String key : signMapSorted.keySet()) &#123;</span><br><span class="line">            Object value = signMapSorted.get(key);</span><br><span class="line">            builder.append(<span class="string">"&amp;"</span>).append(key).append(<span class="string">"="</span>).append(value);</span><br><span class="line">        &#125;</span><br><span class="line">        builder.delete(<span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> builder.toString();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
</div><div class="tags"><a href="/tags/Java/">Java</a></div><div class="post-nav"><a class="pre" href="/hello-world">Hexo基础操作</a><a class="next" href="/mockit_junit_in_java">使用Mockito进行JUnit单元测试</a></div></div></div></div><div class="pure-u-1-4 hidden_mid_and_down"><div id="sidebar"><div class="widget"><form class="search-form" action="//www.google.com/search" method="get" accept-charset="utf-8" target="_blank"><input type="text" name="q" maxlength="20" placeholder="Search"/><input type="hidden" name="sitesearch" value="http://www.codeessay.com"/></form></div><div class="widget"><div class="widget-title"><i class="fa fa-folder-o"> 分类</i></div><ul class="category-list"><li class="category-list-item"><a class="category-list-link" href="/categories/code-snippet/">代码片段</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/foundation/">基础技术</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/architecture/">架构设计</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/framework/">框架学习</a></li></ul></div><div class="widget"><div class="widget-title"><i class="fa fa-star-o"> 标签</i></div><div class="tagcloud"><a href="/tags/pandas/" style="font-size: 15px;">pandas</a> <a href="/tags/Java/" style="font-size: 15px;">Java</a> <a href="/tags/架构设计/" style="font-size: 15px;">架构设计</a> <a href="/tags/graph-db/" style="font-size: 15px;">graph_db</a> <a href="/tags/Hexo/" style="font-size: 15px;">Hexo</a> <a href="/tags/SpringMVC/" style="font-size: 15px;">SpringMVC</a> <a href="/tags/JHipster-SpringMVC/" style="font-size: 15px;">JHipster, SpringMVC</a> <a href="/tags/Django-Python/" style="font-size: 15px;">Django, Python</a> <a href="/tags/recommend/" style="font-size: 15px;">recommend</a> <a href="/tags/基础技术/" style="font-size: 15px;">基础技术</a> <a href="/tags/scrapy/" style="font-size: 15px;">scrapy</a> <a href="/tags/site-search/" style="font-size: 15px;">site_search</a> <a href="/tags/sklearn/" style="font-size: 15px;">sklearn</a> <a href="/tags/spark/" style="font-size: 15px;">spark</a></div></div><div class="widget"><div class="widget-title"><i class="fa fa-file-o"> 最近文章</i></div><ul class="post-list"><li class="post-list-item"><a class="post-list-link" href="/graph_db_3">Neo4j的Java和Python API</a></li><li class="post-list-item"><a class="post-list-link" href="/graph_db_2">Neo4j的使用：安装， Cypher， 数据管理，导入导出， 前端Html，聚类</a></li><li class="post-list-item"><a class="post-list-link" href="/graph_db_1">图数据库的基本概念</a></li><li class="post-list-item"><a class="post-list-link" href="/graph_db_0">图数据库</a></li><li class="post-list-item"><a class="post-list-link" href="/graph_db_5">Gremlin的Java API</a></li><li class="post-list-item"><a class="post-list-link" href="/scrapy_2">2、数据提取和保存：css选择器和xpath选择器； ajax api； headless浏览器</a></li><li class="post-list-item"><a class="post-list-link" href="/graph_db_6">6、D3展示图</a></li><li class="post-list-item"><a class="post-list-link" href="/spark_0">Spark数据处理和机器学习</a></li><li class="post-list-item"><a class="post-list-link" href="/sklearn_8">8、在Java程序中使用sklearn模型</a></li><li class="post-list-item"><a class="post-list-link" href="/sklearn_7">7、模型保存和载入，在线更新</a></li></ul></div><div class="widget"><div class="widget-title"><i class="fa fa-external-link"> 友情链接</i></div><ul></ul><a href="http://www.example1.com/" title="site-name1" target="_blank">site-name1</a><ul></ul><a href="http://www.example2.com/" title="site-name2" target="_blank">site-name2</a><ul></ul><a href="http://www.example3.com/" title="site-name3" target="_blank">site-name3</a></div></div></div><div class="pure-u-1 pure-u-md-3-4"><div id="footer">Copyright © 2019 <a href="/." rel="nofollow">技术随笔.</a> Powered by<a rel="nofollow" target="_blank" href="https://hexo.io"> Hexo.</a><a rel="nofollow" target="_blank" href="https://github.com/tufu9441/maupassant-hexo"> Theme</a> by<a rel="nofollow" target="_blank" href="https://github.com/pagecho"> Cho.</a></div></div></div><a class="show" id="rocket" href="#top"></a><script type="text/javascript" src="/js/totop.js?v=0.0.0" async></script><script type="text/javascript" src="//cdn.bootcss.com/fancybox/3.2.5/jquery.fancybox.min.js" async></script><script type="text/javascript" src="/js/fancybox.js?v=0.0.0" async></script><link rel="stylesheet" type="text/css" href="//cdn.bootcss.com/fancybox/3.2.5/jquery.fancybox.min.css"><script type="text/javascript" src="/js/codeblock-resizer.js?v=0.0.0"></script><script type="text/javascript" src="/js/smartresize.js?v=0.0.0"></script></div></body></html>