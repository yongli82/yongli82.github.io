<!DOCTYPE html><html lang="zh-CN"><head><meta http-equiv="content-type" content="text/html; charset=utf-8"><meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0" name="viewport"><meta content="yes" name="apple-mobile-web-app-capable"><meta content="black-translucent" name="apple-mobile-web-app-status-bar-style"><meta content="telephone=no" name="format-detection"><meta name="description"><title>Neo4j的Java和Python API | 技术随笔</title><link rel="stylesheet" type="text/css" href="/css/style.css?v=0.0.0"><link rel="stylesheet" type="text/css" href="//cdn.bootcss.com/normalize/7.0.0/normalize.min.css"><link rel="stylesheet" type="text/css" href="//cdn.bootcss.com/pure/1.0.0/pure-min.css"><link rel="stylesheet" type="text/css" href="//cdn.bootcss.com/pure/1.0.0/grids-responsive-min.css"><link rel="stylesheet" href="//cdn.bootcss.com/font-awesome/4.7.0/css/font-awesome.min.css"><script type="text/javascript" src="//cdn.bootcss.com/jquery/3.2.1/jquery.min.js"></script><link rel="Shortcut Icon" type="image/x-icon" href="/favicon.ico"><link rel="apple-touch-icon" href="/apple-touch-icon.png"><link rel="apple-touch-icon-precomposed" href="/apple-touch-icon.png"></head><body><div class="body_container"><div id="header"><div class="site-name"><h1 class="hidden">Neo4j的Java和Python API</h1><a id="logo" href="/.">技术随笔</a><p class="description"></p></div><div id="nav-menu"><a class="current" href="/."><i class="fa fa-home"> 首页</i></a><a href="/archives/"><i class="fa fa-archive"> 归档</i></a><a href="/about/"><i class="fa fa-user"> 关于</i></a><a href="/atom.xml"><i class="fa fa-rss"> 订阅</i></a></div></div><div class="pure-g" id="layout"><div class="pure-u-1 pure-u-md-3-4"><div class="content_container"><div class="post"><h1 class="post-title">Neo4j的Java和Python API</h1><div class="post-meta">Jan 19, 2019<span> | </span><span class="category"><a href="/categories/foundation/">基础技术</a></span></div><div class="post-content"><h1 id="Neo4j的Java和Python-API"><a href="#Neo4j的Java和Python-API" class="headerlink" title="Neo4j的Java和Python API"></a>Neo4j的Java和Python API</h1><h2 id="Java-API"><a href="#Java-API" class="headerlink" title="Java API"></a>Java API</h2><h3 id="使用流程"><a href="#使用流程" class="headerlink" title="使用流程"></a>使用流程</h3><pre><code>1、引进依赖库
2、配置Neo4j链接
3、加载数据: 节点、边和属性
4、查询数据
5、更新数据
6、复杂查询
</code></pre><h3 id="1、引入依赖库"><a href="#1、引入依赖库" class="headerlink" title="1、引入依赖库"></a>1、引入依赖库</h3><p>有多种方式在Java项目中访问Neo4j数据库</p>
<h4 id="1-1-Neo4j-Java-Driver"><a href="#1-1-Neo4j-Java-Driver" class="headerlink" title="1.1 Neo4j Java Driver"></a>1.1 Neo4j Java Driver</h4><p>使用Neo4j的Java驱动，用原生方式访问独立的Neo4j服务器</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.neo4j.driver<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>neo4j-java-driver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="1-2-Embedded-Neo4j"><a href="#1-2-Embedded-Neo4j" class="headerlink" title="1.2 Embedded Neo4j"></a>1.2 Embedded Neo4j</h4><p>使用嵌入式Jar，在程序JVM中运行Neo4j，内容保存本地文件中。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.neo4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>neo4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="1-3-Spring-Data-Neo4j"><a href="#1-3-Spring-Data-Neo4j" class="headerlink" title="1.3 Spring Data Neo4j"></a>1.3 Spring Data Neo4j</h4><p>兼容Spring Data接口<br><a href="https://neo4j.com/developer/spring-data-neo4j/" target="_blank" rel="noopener">https://neo4j.com/developer/spring-data-neo4j/</a></p>
<h4 id="其它方式"><a href="#其它方式" class="headerlink" title="其它方式"></a>其它方式</h4><p>参考 <a href="https://neo4j.com/developer/java/" target="_blank" rel="noopener">https://neo4j.com/developer/java/</a></p>
<ul>
<li>Object-Graph-Mapping with Neo4j-OGM</li>
<li>Using Neo4j’s Embedded Java API</li>
<li>User Defined Procedures and Functions</li>
<li>Extending Neo4j Server with a REST Server Extension</li>
<li>Using Neo4j Server with JDBC</li>
<li>Neo4j Community Drivers</li>
<li>JCypher</li>
<li>Groovy &amp; Grails: Neo4j Grails Plugin</li>
<li>Clojure: Neocons</li>
<li>Scala: AnormCypher</li>
<li>JPA: Hibernate OGM</li>
</ul>
<h3 id="2、配置Neo4j链接"><a href="#2、配置Neo4j链接" class="headerlink" title="2、配置Neo4j链接"></a>2、配置Neo4j链接</h3><p>从Neo4j的管理界面上获取<code>bolt://</code>链接</p>
<h4 id="2-1-使用Neo4j-Java-Driver"><a href="#2-1-使用Neo4j-Java-Driver" class="headerlink" title="2.1 使用Neo4j Java Driver"></a>2.1 使用Neo4j Java Driver</h4><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Driver</span> <span class="built_in">driver</span> = GraphDatabase.<span class="built_in">driver</span>(</span><br><span class="line">            <span class="string">"bolt://server:7687"</span>, AuthTokens.basic(<span class="string">"neo4j"</span>, <span class="string">"password"</span>));</span><br></pre></td></tr></table></figure>
<p><a href="https://neo4j.com/docs/driver-manual/1.7/sessions-transactions/" target="_blank" rel="noopener">https://neo4j.com/docs/driver-manual/1.7/sessions-transactions/</a></p>
<h3 id="参考文档："><a href="#参考文档：" class="headerlink" title="参考文档："></a>参考文档：</h3><p>[1] 官网 <a href="https://neo4j.com/developer/java/" target="_blank" rel="noopener">Using Neo4j from Java</a></p>
<p>[2] <a href="https://www.baeldung.com/java-neo4j" target="_blank" rel="noopener">A Guide to Neo4J with Java</a>  2018-08-25</p>
<h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.demo.service.graph;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.demo.api.graph.Edge;</span><br><span class="line"><span class="keyword">import</span> com.demo.api.graph.GraphService;</span><br><span class="line"><span class="keyword">import</span> com.demo.api.graph.Triplet;</span><br><span class="line"><span class="keyword">import</span> com.demo.api.graph.Vertex;</span><br><span class="line"><span class="keyword">import</span> org.neo4j.driver.v1.*;</span><br><span class="line"><span class="keyword">import</span> org.neo4j.driver.v1.summary.ResultSummary;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.<span class="keyword">annotation</span>.PreDestroy;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> static org.neo4j.driver.v1.Values.parameters;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Neo4jGraphServiceImpl</span> <span class="title">implements</span> <span class="title">GraphService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    Driver driver = GraphDatabase.driver(</span><br><span class="line">            <span class="string">"bolt://server:7687"</span>, AuthTokens.basic(<span class="string">"neo4j"</span>, <span class="string">"password"</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加节点</span></span><br><span class="line"><span class="comment">     * 如果已经存在，不添加新节点，计数器加一</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> vertexType</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> vertexNameList</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> void addVertex(String vertexType, <span class="keyword">final</span> List&lt;String&gt; vertexNameList) &#123;</span><br><span class="line">        <span class="keyword">try</span> (Session session = driver.session()) &#123;</span><br><span class="line">            session.writeTransaction(tx -&gt; &#123;</span><br><span class="line">                <span class="keyword">for</span> (String vertexName : vertexNameList) &#123;</span><br><span class="line">                    String cypher = <span class="string">"MERGE (v:<span class="variable">$vertexType</span> &#123;name: '<span class="variable">$vertexName</span>'&#125;) "</span> +</span><br><span class="line">                            <span class="string">"on create SET v.count = 1 "</span> +</span><br><span class="line">                            <span class="string">"on match SET v.count = v.count + 1 "</span> +</span><br><span class="line">                            <span class="string">"return v"</span>;</span><br><span class="line">                    cypher = cypher.replace(<span class="string">"<span class="variable">$vertexType</span>"</span>, vertexType).replace(<span class="string">"<span class="variable">$vertexName</span>"</span>, vertexName);</span><br><span class="line">                    ResultSummary resultSummary = tx.run(cypher,</span><br><span class="line">                            parameters(<span class="string">"vertexName"</span>, vertexName)).consume();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加关系</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> edgeName</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> vertexType</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> vertexNameList</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> void addEdges(String edgeName, String vertexType, List&lt;String&gt; vertexNameList) &#123;</span><br><span class="line">        <span class="keyword">try</span> (Session session = driver.session()) &#123;</span><br><span class="line">            session.writeTransaction(tx -&gt; &#123;</span><br><span class="line">                <span class="keyword">for</span> (String vertexNameSource : vertexNameList) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (String vertexNameDest : vertexNameList) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (vertexNameSource.equals(vertexNameDest)) &#123;</span><br><span class="line">                            <span class="keyword">continue</span>;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        String cypher = <span class="string">"MATCH (source:<span class="variable">$vertexType</span> &#123;name: '<span class="variable">$vertexNameSource</span>'&#125;)"</span> +</span><br><span class="line">                                <span class="string">"MATCH (dest:<span class="variable">$vertexType</span> &#123;name: '<span class="variable">$vertexNameDest</span>'&#125;) "</span> +</span><br><span class="line">                                <span class="string">" MERGE (source)-[edge:<span class="variable">$edgeName</span>]-&gt;(dest) "</span> +</span><br><span class="line">                                <span class="string">"on create SET edge.count = 1 "</span> +</span><br><span class="line">                                <span class="string">"on match SET edge.count = edge.count + 1 "</span> +</span><br><span class="line">                                <span class="string">"return edge.count"</span>;</span><br><span class="line">                        cypher = cypher.replace(<span class="string">"<span class="variable">$vertexType</span>"</span>, vertexType)</span><br><span class="line">                                .replace(<span class="string">"<span class="variable">$edgeName</span>"</span>, edgeName)</span><br><span class="line">                                .replace(<span class="string">"<span class="variable">$vertexNameSource</span>"</span>, vertexNameSource)</span><br><span class="line">                                .replace(<span class="string">"<span class="variable">$vertexNameDest</span>"</span>, vertexNameDest);</span><br><span class="line">                        ResultSummary resultSummary = tx.run(cypher,</span><br><span class="line">                                parameters(<span class="string">"vertexNameSource"</span>, vertexNameSource,</span><br><span class="line">                                        <span class="string">"vertexNameDest"</span>, vertexNameDest)).consume();</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Suggest</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> vertexType</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> prefix</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pageSize</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pageNo</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;String&gt; suggestVertexNames(String vertexType, String prefix, int pageSize, int pageNo) &#123;</span><br><span class="line">        <span class="keyword">try</span> (Session session = driver.session()) &#123;</span><br><span class="line">            String cypher = <span class="string">"MATCH (a:<span class="variable">$vertexType</span>) "</span> +</span><br><span class="line">                    <span class="string">" WHERE a.name =~ '(?i)<span class="variable">$prefix</span>.*' "</span> +</span><br><span class="line">                    <span class="string">" WITH a, SIZE((a)-[]-&gt;()) as r_size "</span> +</span><br><span class="line">                    <span class="string">" ORDER BY SIZE(a.name) asc, r_size desc "</span> +</span><br><span class="line">                    <span class="string">" RETURN a, r_size "</span> +</span><br><span class="line">                    <span class="string">" SKIP <span class="variable">$skipSize</span> LIMIT <span class="variable">$maxSize</span>"</span>;</span><br><span class="line">            int skipSize = pageNo * pageSize;</span><br><span class="line">            cypher = cypher.replace(<span class="string">"<span class="variable">$vertexType</span>"</span>, vertexType)</span><br><span class="line">                    .replace(<span class="string">"<span class="variable">$prefix</span>"</span>, prefix.replace(<span class="string">"."</span>, <span class="string">"\\."</span>).replace(<span class="string">"*"</span>, <span class="string">"\\*"</span>))</span><br><span class="line">                    .replace(<span class="string">"<span class="variable">$maxSize</span>"</span>, String.valueOf(pageSize))</span><br><span class="line">                    .replace(<span class="string">"<span class="variable">$skipSize</span>"</span>, String.valueOf(skipSize));</span><br><span class="line"></span><br><span class="line">            List&lt;String&gt; nodeNames = session.run(cypher).list(record -&gt; &#123;</span><br><span class="line">                        String name = record.<span class="keyword">get</span>(<span class="string">"a"</span>).<span class="keyword">get</span>(<span class="string">"name"</span>, <span class="string">"prefix"</span>);</span><br><span class="line">                        <span class="keyword">return</span> name;</span><br><span class="line">                    &#125;</span><br><span class="line">            );</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> nodeNames;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询关联节点</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> vertexType</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> vertexName</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> maxSize</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Triplet&gt; queryRelatives(String vertexType, String vertexName, int maxSize) &#123;</span><br><span class="line">        <span class="keyword">try</span> (Session session = driver.session()) &#123;</span><br><span class="line">            String cypher = <span class="string">"MATCH (a:<span class="variable">$vertexType</span> &#123;name: '<span class="variable">$vertexName</span>'&#125;)-[r]-&gt;(b:<span class="variable">$vertexType</span>)  "</span> +</span><br><span class="line">                    <span class="string">" RETURN a,r,b "</span> +</span><br><span class="line">                    <span class="string">" ORDER BY r.count desc,b.count desc "</span> +</span><br><span class="line">                    <span class="string">" LIMIT <span class="variable">$maxSize</span> "</span>;</span><br><span class="line">            cypher = cypher.replace(<span class="string">"<span class="variable">$vertexType</span>"</span>, vertexType)</span><br><span class="line">                    .replace(<span class="string">"<span class="variable">$vertexName</span>"</span>, vertexName)</span><br><span class="line">                    .replace(<span class="string">"<span class="variable">$maxSize</span>"</span>, String.valueOf(maxSize));</span><br><span class="line"></span><br><span class="line">            List&lt;Triplet&gt; triplets = session.run(cypher).list((record) -&gt; &#123;</span><br><span class="line">                Value a = record.<span class="keyword">get</span>(<span class="string">"a"</span>);</span><br><span class="line">                Vertex source = new Vertex(a.<span class="keyword">get</span>(<span class="string">"name"</span>, <span class="string">""</span>), a.<span class="keyword">get</span>(<span class="string">"count"</span>, <span class="number">1</span>L));</span><br><span class="line">                Value b = record.<span class="keyword">get</span>(<span class="string">"b"</span>);</span><br><span class="line">                Vertex dest = new Vertex(b.<span class="keyword">get</span>(<span class="string">"name"</span>, <span class="string">""</span>), b.<span class="keyword">get</span>(<span class="string">"count"</span>, <span class="number">1</span>L));</span><br><span class="line">                Value r = record.<span class="keyword">get</span>(<span class="string">"r"</span>);</span><br><span class="line">                Edge edge = new Edge(r.asRelationship().type(), r.<span class="keyword">get</span>(<span class="string">"count"</span>, <span class="number">1</span>L));</span><br><span class="line">                Triplet triplet = new Triplet(source, edge, dest);</span><br><span class="line">                <span class="keyword">return</span> triplet;</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">return</span> triplets;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PreDestroy</span></span><br><span class="line">    <span class="keyword">public</span> void preDestroy() &#123;</span><br><span class="line">        driver.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Python-API"><a href="#Python-API" class="headerlink" title="Python API"></a>Python API</h2><p>参考 <a href="https://py2neo.org/v4/" target="_blank" rel="noopener">https://py2neo.org/v4/</a></p>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip <span class="keyword">install</span> py2neo</span><br></pre></td></tr></table></figure>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python</span><br><span class="line"># -*- coding:utf-8 -*-</span><br><span class="line"># https:<span class="comment">//py2neo.org/v4/</span></span><br><span class="line"></span><br><span class="line">from py2neo import <span class="keyword">Graph</span></span><br><span class="line">from py2neo.ogm import GraphObject, Property, RelatedTo</span><br><span class="line"></span><br><span class="line"><span class="keyword">graph</span> = <span class="keyword">Graph</span>(<span class="string">"bolt://server:7687"</span>, user=<span class="string">"neo4j"</span>, password=<span class="string">"password"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> Skill(GraphObject):</span><br><span class="line">    __primarylabel__ = <span class="string">"SKILL"</span></span><br><span class="line">    __primarykey__ = <span class="string">"name"</span></span><br><span class="line"></span><br><span class="line">    name = Property()</span><br><span class="line">    <span class="keyword">count</span> = Property()</span><br><span class="line">    belongTo = RelatedTo(<span class="string">"Category"</span>, <span class="string">"belongTo"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> Category(GraphObject):</span><br><span class="line">    __primarylabel__ = <span class="string">"Category"</span></span><br><span class="line">    __primarykey__ = <span class="string">"name"</span></span><br><span class="line"></span><br><span class="line">    name = Property()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">count</span> = 0</span><br><span class="line">with <span class="keyword">open</span>(<span class="string">"skill_keyword_count.txt"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> <span class="keyword">line</span> <span class="keyword">in</span> f:</span><br><span class="line">        <span class="keyword">line</span> = <span class="keyword">line</span>.strip()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">line</span>:</span><br><span class="line">            <span class="keyword">count</span> += 1</span><br><span class="line">            <span class="keyword">print</span>(<span class="keyword">line</span>)</span><br><span class="line">            name, category_name, match_count = <span class="keyword">line</span>.<span class="keyword">split</span>(<span class="string">"\t"</span>)</span><br><span class="line">            skill = Skill()</span><br><span class="line">            skill.name = name</span><br><span class="line">            category = Category()</span><br><span class="line">            category.name = category_name</span><br><span class="line">            skill.belongTo.add(category, <span class="keyword">count</span>=int(match_count))</span><br><span class="line">            <span class="keyword">graph</span>.<span class="keyword">merge</span>(category)</span><br><span class="line">            <span class="keyword">graph</span>.<span class="keyword">merge</span>(skill)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">count</span> % 1000 == 0:</span><br><span class="line">                <span class="keyword">print</span>(<span class="keyword">count</span>)</span><br></pre></td></tr></table></figure>
<h1 id="专题文章"><a href="#专题文章" class="headerlink" title="专题文章"></a>专题文章</h1><p><a href="/graph_db_0">图数据库 </a></p>
<p><a href="/graph_db_1">1、图数据库的基本概念</a></p>
<p><a href="/graph_db_2">2、Neo4j的使用：安装， Cypher， 数据管理，导入导出， 前端Html，聚类</a></p>
<p><a href="/graph_db_3">3、Neo4j的Java API</a></p>
<p><a href="/graph_db_4">4、JanusGraph的使用: 安装，Gremlin，数据管理，导入导出，前端HTML</a></p>
<p><a href="/graph_db_5">5、Gremlin的Java API</a></p>
<p><a href="/graph_db_6">6、D3展示图</a></p>
</div><div class="tags"><a href="/tags/graph-db/">graph_db</a></div><div class="post-nav"><a class="next" href="/graph_db_2">Neo4j的使用：安装， Cypher， 数据管理，导入导出， 前端Html，聚类</a></div></div></div></div><div class="pure-u-1-4 hidden_mid_and_down"><div id="sidebar"><div class="widget"><form class="search-form" action="//www.google.com/search" method="get" accept-charset="utf-8" target="_blank"><input type="text" name="q" maxlength="20" placeholder="Search"/><input type="hidden" name="sitesearch" value="http://www.codeessay.com"/></form></div><div class="widget"><div class="widget-title"><i class="fa fa-folder-o"> 分类</i></div><ul class="category-list"><li class="category-list-item"><a class="category-list-link" href="/categories/code-snippet/">代码片段</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/foundation/">基础技术</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/architecture/">架构设计</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/framework/">框架学习</a></li></ul></div><div class="widget"><div class="widget-title"><i class="fa fa-star-o"> 标签</i></div><div class="tagcloud"><a href="/tags/pandas/" style="font-size: 15px;">pandas</a> <a href="/tags/Java/" style="font-size: 15px;">Java</a> <a href="/tags/架构设计/" style="font-size: 15px;">架构设计</a> <a href="/tags/graph-db/" style="font-size: 15px;">graph_db</a> <a href="/tags/Hexo/" style="font-size: 15px;">Hexo</a> <a href="/tags/SpringMVC/" style="font-size: 15px;">SpringMVC</a> <a href="/tags/JHipster-SpringMVC/" style="font-size: 15px;">JHipster, SpringMVC</a> <a href="/tags/Django-Python/" style="font-size: 15px;">Django, Python</a> <a href="/tags/recommend/" style="font-size: 15px;">recommend</a> <a href="/tags/基础技术/" style="font-size: 15px;">基础技术</a> <a href="/tags/scrapy/" style="font-size: 15px;">scrapy</a> <a href="/tags/site-search/" style="font-size: 15px;">site_search</a> <a href="/tags/sklearn/" style="font-size: 15px;">sklearn</a> <a href="/tags/spark/" style="font-size: 15px;">spark</a></div></div><div class="widget"><div class="widget-title"><i class="fa fa-file-o"> 最近文章</i></div><ul class="post-list"><li class="post-list-item"><a class="post-list-link" href="/graph_db_3">Neo4j的Java和Python API</a></li><li class="post-list-item"><a class="post-list-link" href="/graph_db_2">Neo4j的使用：安装， Cypher， 数据管理，导入导出， 前端Html，聚类</a></li><li class="post-list-item"><a class="post-list-link" href="/graph_db_1">图数据库的基本概念</a></li><li class="post-list-item"><a class="post-list-link" href="/graph_db_0">图数据库</a></li><li class="post-list-item"><a class="post-list-link" href="/graph_db_5">Gremlin的Java API</a></li><li class="post-list-item"><a class="post-list-link" href="/scrapy_2">2、数据提取和保存：css选择器和xpath选择器； ajax api； headless浏览器</a></li><li class="post-list-item"><a class="post-list-link" href="/graph_db_6">6、D3展示图</a></li><li class="post-list-item"><a class="post-list-link" href="/spark_0">Spark数据处理和机器学习</a></li><li class="post-list-item"><a class="post-list-link" href="/sklearn_8">8、在Java程序中使用sklearn模型</a></li><li class="post-list-item"><a class="post-list-link" href="/sklearn_7">7、模型保存和载入，在线更新</a></li></ul></div><div class="widget"><div class="widget-title"><i class="fa fa-external-link"> 友情链接</i></div><ul></ul><a href="http://www.example1.com/" title="site-name1" target="_blank">site-name1</a><ul></ul><a href="http://www.example2.com/" title="site-name2" target="_blank">site-name2</a><ul></ul><a href="http://www.example3.com/" title="site-name3" target="_blank">site-name3</a></div></div></div><div class="pure-u-1 pure-u-md-3-4"><div id="footer">Copyright © 2019 <a href="/." rel="nofollow">技术随笔.</a> Powered by<a rel="nofollow" target="_blank" href="https://hexo.io"> Hexo.</a><a rel="nofollow" target="_blank" href="https://github.com/tufu9441/maupassant-hexo"> Theme</a> by<a rel="nofollow" target="_blank" href="https://github.com/pagecho"> Cho.</a></div></div></div><a class="show" id="rocket" href="#top"></a><script type="text/javascript" src="/js/totop.js?v=0.0.0" async></script><script type="text/javascript" src="//cdn.bootcss.com/fancybox/3.2.5/jquery.fancybox.min.js" async></script><script type="text/javascript" src="/js/fancybox.js?v=0.0.0" async></script><link rel="stylesheet" type="text/css" href="//cdn.bootcss.com/fancybox/3.2.5/jquery.fancybox.min.css"><script type="text/javascript" src="/js/codeblock-resizer.js?v=0.0.0"></script><script type="text/javascript" src="/js/smartresize.js?v=0.0.0"></script></div></body></html>